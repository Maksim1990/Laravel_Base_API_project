version: 2.1
jobs:

    build:
      docker:
          - image: docker:stable
      steps:
        - checkout
        - run: docker info
    test:
      docker:
        - image: circleci/php:7.2.9-fpm
        - image: circleci/mysql:5.7.26
          environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: laravel_api_db_test
            MYSQL_USER: docker
            MYSQL_PASSWORD: laraapi
        - image: selenium/standalone-chrome:3
      steps:
        - checkout
        - run: sudo apt-get update && sudo apt-get install --assume-yes apt-utils
        - run: sudo apt-get install -y  curl  wget  git  libzip-dev  expect
        - run: sudo docker-php-ext-configure zip --with-libzip
        - run: sudo docker-php-ext-install -j$(nproc) pdo_mysql zip mysqli

        - run: sudo composer self-update
        - run: sudo composer install -n --prefer-dist --ignore-platform-reqs
        - save_cache:
            key: composer-v1-{{ checksum "composer.lock" }}
            paths:
              - vendor
        - run: cp behat.dist.remote behat.yml
        - run: cp .env.behat.deploy .env
        - run: php artisan create:database laravel_api_db_test
        - run: php artisan migrate
        - run: php artisan passport:install
        - run:
            name: Run web server
            command: php bin/console server:run --env=test -vvv 127.0.0.1:8080 > server.log 2>&1
            background: true
        - run: vendor/bin/behat --tags @api

    deploy:
      machine:
        enabled: true
      steps:
        - add_ssh_keys:
            fingerprints:
              - "0c:33:a8:8c:40:06:fa:ae:13:c8:63:a6:e7:52:a1:b0"
        - run:
            name: Deploy Over SSH to VPS server 
            command: |
              ssh -t $SSH_USER_VPS@$SSH_HOST_VPS "cd $PROJECT_DIR && touch test.txt && ls -la"
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
              branches:
                only: develop
      - test:
          filters:
            branches:
              only: feature/Setting_up_CI_CD
      - deploy:
          filters:
            branches:
              only: develop
